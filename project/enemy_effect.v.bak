module enemy_effect(
    input clk,
    input [15:0] enemy_matrix1,
    input [15:0] enemy_matrix2,
    input [15:0] enemy_matrix3,
    input [15:0] enemy_matrix4,
    input [15:0] enemy_matrix5,
    input [15:0] enemy_matrix6,
    input [15:0] enemy_matrix7,
    input [15:0] enemy_matrix8,
    input [9:0] next_x,
    input [9:0] next_y,
    output reg [7:0] color
);

    wire [9:0] x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6, x7, y7, x8, y8;

    // Instantiating the location modules for each enemy
    location loc1(enemy_matrix1[12:9], enemy_matrix1[8:4], x1, y1);
    location loc2(enemy_matrix2[12:9], enemy_matrix2[8:4], x2, y2);
    location loc3(enemy_matrix3[12:9], enemy_matrix3[8:4], x3, y3);
    location loc4(enemy_matrix4[12:9], enemy_matrix4[8:4], x4, y4);
    location loc5(enemy_matrix5[12:9], enemy_matrix5[8:4], x5, y5);
    location loc6(enemy_matrix6[12:9], enemy_matrix6[8:4], x6, y6);
    location loc7(enemy_matrix7[12:9], enemy_matrix7[8:4], x7, y7);
    location loc8(enemy_matrix8[12:9], enemy_matrix8[8:4], x8, y8);

    reg [7:0] explosion_color;
    reg [4:0] location_;
    integer i;

    // Function to calculate explosion effect color based on the location value
    function [7:0] calculate_explosion_color;
        input [4:0] loc;
        begin
            if (loc >= 25 && loc <= 31) begin
                // Color gradient from bright green to dark green
                calculate_explosion_color = 8'b00001111 - ((loc - 25) * 3); // Fading effect
            end else begin
                calculate_explosion_color = 8'b00000000; // No explosion
            end
        end
    endfunction

    always @(posedge clk) begin
        color = 8'b00000000; // Default color
        explosion_color = 8'b00000000;

        // Loop through each enemy matrix to check and apply explosion effect
        for (i = 0; i < 8; i = i + 1) begin
            case (i)
                0: location_ = enemy_matrix1[12:9];
                1: location_ = enemy_matrix2[12:9];
                2: location_ = enemy_matrix3[12:9];
                3: location_ = enemy_matrix4[12:9];
                4: location_ = enemy_matrix5[12:9];
                5: location_ = enemy_matrix6[12:9];
                6: location_ = enemy_matrix7[12:9];
                7: location_ = enemy_matrix8[12:9];
            endcase

            // Update explosion color based on location
            explosion_color = calculate_explosion_color(location_);

            // Determine if explosion should be applied to the screen color
            if (i == 0 && location_ >= 25) begin
                if ((x1 > (next_x - 10)) && (x1 < (next_x + 10)) && (y1 > (next_y - 10)) && (y1 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end else if (i == 1 && location_ >= 25) begin
                if ((x2 > (next_x - 10)) && (x2 < (next_x + 10)) && (y2 > (next_y - 10)) && (y2 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end else if (i == 2 && location_ >= 25) begin
                if ((x3 > (next_x - 10)) && (x3 < (next_x + 10)) && (y3 > (next_y - 10)) && (y3 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end else if (i == 3 && location_ >= 25) begin
                if ((x4 > (next_x - 10)) && (x4 < (next_x + 10)) && (y4 > (next_y - 10)) && (y4 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end else if (i == 4 && location_ >= 25) begin
                if ((x5 > (next_x - 10)) && (x5 < (next_x + 10)) && (y5 > (next_y - 10)) && (y5 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end else if (i == 5 && location_ >= 25) begin
                if ((x6 > (next_x - 10)) && (x6 < (next_x + 10)) && (y6 > (next_y - 10)) && (y6 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end else if (i == 6 && location_ >= 25) begin
                if ((x7 > (next_x - 10)) && (x7 < (next_x + 10)) && (y7 > (next_y - 10)) && (y7 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end else if (i == 7 && location_ >= 25) begin
                if ((x8 > (next_x - 10)) && (x8 < (next_x + 10)) && (y8 > (next_y - 10)) && (y8 < (next_y + 10))) begin
                    color = explosion_color;
                end
            end
        end
    end
endmodule