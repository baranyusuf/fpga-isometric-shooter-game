module game_over_display (
    input clk,
    input [9:0] next_x,
    input [9:0] next_y,
    input gameover,
    output reg [7:0] vga_color
);

localparam centerx = 500;
localparam centery = 300;
localparam FONT_WIDTH = 11; // 10 bits for the character + 1 bit for the space
localparam FONT_HEIGHT = 20; // Slightly larger font height for "Game Over"
localparam TOTAL_WIDTH = 9 * FONT_WIDTH; // "Game Over" is 9 characters long
localparam START_X = centerx - (TOTAL_WIDTH) / 2;
localparam START_Y = centery - (FONT_HEIGHT) / 2;

reg [10:0] font [0:127] [0:19]; // Larger font height

initial begin
    // G
    font["G"][0] = 11'b00111111000;
    font["G"][1] = 11'b01100001100;
    font["G"][2] = 11'b11000000110;
    font["G"][3] = 11'b11000000000;
    font["G"][4] = 11'b11000000000;
    font["G"][5] = 11'b11000111110;
    font["G"][6] = 11'b11000000110;
    font["G"][7] = 11'b11000000110;
    font["G"][8] = 11'b01100001100;
    font["G"][9] = 11'b00111111000;
    // A
    font["A"][0] = 11'b00111111000;
    font["A"][1] = 11'b01100001100;
    font["A"][2] = 11'b11000000110;
    font["A"][3] = 11'b11000000110;
    font["A"][4] = 11'b11111111110;
    font["A"][5] = 11'b11000000110;
    font["A"][6] = 11'b11000000110;
    font["A"][7] = 11'b11000000110;
    font["A"][8] = 11'b11000000110;
    font["A"][9] = 11'b11000000110;
    // M
    font["M"][0] = 11'b11000000110;
    font["M"][1] = 11'b11100001110;
    font["M"][2] = 11'b11110011110;
    font["M"][3] = 11'b11011110110;
    font["M"][4] = 11'b11001100110;
    font["M"][5] = 11'b11000000110;
    font["M"][6] = 11'b11000000110;
    font["M"][7] = 11'b11000000110;
    font["M"][8] = 11'b11000000110;
    font["M"][9] = 11'b11000000110;
    // E
    font["E"][0] = 11'b11111111110;
    font["E"][1] = 11'b11000000000;
    font["E"][2] = 11'b11000000000;
    font["E"][3] = 11'b11000000000;
    font["E"][4] = 11'b11111111000;
    font["E"][5] = 11'b11000000000;
    font["E"][6] = 11'b11000000000;
    font["E"][7] = 11'b11000000000;
    font["E"][8] = 11'b11000000000;
    font["E"][9] = 11'b11111111110;
    // O
    font["O"][0] = 11'b00111111000;
    font["O"][1] = 11'b01100001100;
    font["O"][2] = 11'b11000000110;
    font["O"][3] = 11'b11000000110;
    font["O"][4] = 11'b11000000110;
    font["O"][5] = 11'b11000000110;
    font["O"][6] = 11'b11000000110;
    font["O"][7] = 11'b11000000110;
    font["O"][8] = 11'b01100001100;
    font["O"][9] = 11'b00111111000;
    // V
    font["V"][0] = 11'b11000000110;
    font["V"][1] = 11'b11000000110;
    font["V"][2] = 11'b11000000110;
    font["V"][3] = 11'b11000000110;
    font["V"][4] = 11'b11000000110;
    font["V"][5] = 11'b11000000110;
    font["V"][6] = 11'b11000000110;
    font["V"][7] = 11'b01100001100;
    font["V"][8] = 11'b01100001100;
    font["V"][9] = 11'b00111111000;
    // R
    font["R"][0] = 11'b01111111000;
    font["R"][1] = 11'b11000001100;
    font["R"][2] = 11'b11000000110;
    font["R"][3] = 11'b11000000110;
    font["R"][4] = 11'b11000001100;
    font["R"][5] = 11'b01111111000;
    font["R"][6] = 11'b11000001100;
    font["R"][7] = 11'b11000000110;
    font["R"][8] = 11'b11000000110;
    font["R"][9] = 11'b11000000110;
    // Space (unused, for spacing)
    font[" "][0] = 11'b00000000000;
    font[" "][1] = 11'b00000000000;
    font[" "][2] = 11'b00000000000;
    font[" "][3] = 11'b00000000000;
    font[" "][4] = 11'b00000000000;
    font[" "][5] = 11'b00000000000;
    font[" "][6] = 11'b00000000000;
    font[" "][7] = 11'b00000000000;
    font[" "][8] = 11'b00000000000;
    font[" "][9] = 11'b00000000000;
end

always @(posedge clk) begin
    if (gameover) begin
        reg [3:0] row;
        reg [3:0] col;
        reg [6:0] char;
        reg [3:0] char_idx;

        char_idx = (next_x - START_X) / FONT_WIDTH;
        char = (next_y - START_Y) / FONT_HEIGHT;

        if (next_x >= START_X && next_x < (START_X + TOTAL_WIDTH) &&
            next_y >= START_Y && next_y < (START_Y + FONT_HEIGHT)) begin

            row = next_y - START_Y;
            col = next_x - (START_X + char_idx * FONT_WIDTH);

            case (char_idx)
                0: char = "G";
                1: char = "A";
                2: char = "M";
                3: char = "E";
                4: char = " ";
                5: char = "O";
                6: char = "V";
                7: char = "E";
                8: char = "R";
                default: char = " ";
            endcase

            if (font[char][row][10 - col]) begin
                vga_color = 8'b11111111; // white
            end else begin
                vga_color = 8'b00000000; // black
            end
        end else begin
            vga_color = 8'b00000000; // black
        end
    end else begin
        vga_color = 8'b00000000; // black
    end
end
endmodule
